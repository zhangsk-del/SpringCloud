<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.zsk.cloud</groupId>
  <artifactId>cloud1</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>colud-provider-payment8001</module>
    <module>colud-procider-consumer80</module>
    <module>cloud-api-commons</module>
    <module>cloud-api-commons</module>
    <module>cloud-eureka-server7001</module>
      <module>cloud-eureka-server7002</module>
      <module>colud-provider-payment8002</module>
      <module>cloud-provider-payment8004</module>
      <module>cloud-consumerZK80-order</module>
      <module>cloud-prociderconsul-payment8006</module>
      <module>cloud-consumerconsul-order80</module>
      <module>cloud-consumer-Feign-order80</module>
    <module>cloud-provider-hystrix-payment8001</module>
      <module>cloud-consumer-feign-hystrix-order80</module>
      <module>colud-consumer-hystrix-dashborad9001</module>
      <module>colud-gateway-geteway9527</module>
      <module>cloud-config-center3344</module>
      <module>cloud-config-client3355</module>
      <module>cloudalibaba-procider-payment9001</module>
    <module>cloudalibaba-provider-payment9002</module>
    <module>cloudalibaba-consumer-nacos83</module>
    <module>cloudalibaba-config-nacos-client3377</module>
      <module>cloud-alibaba-sentinel-server8401</module>
      <module>cloudalibaba-sentinel-service8401</module>
      <module>cloudalibaba-provider-payment9003</module>
      <module>cloudalibaba-provider-payment9004</module>
      <module>coludalibaba-consumer-nacos-order84</module>
    <module>cloudalibaba-consumer-nacos-order84</module>
  </modules>
  <packaging>pom</packaging>

  <!--统一管理jar包版本-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>12</maven.compiler.source>
    <maven.compiler.target>12</maven.compiler.target>
    <junit.version>4.12</junit.version>
    <lombok.version>1.18.10</lombok.version>
    <log4j.version>1.2.17</log4j.version>
    <mysql.version>5.1.47</mysql.version>
    <druid.version>1.1.16</druid.version>
    
    <mybatis.spring.boot.version>2.1.1</mybatis.spring.boot.version>
  </properties>
  <!--dependencyManagement 只是对jar进行管理,不会引入jar-->
  <!--.pom.xml文件中，jar的版本判断的两种途径
       1：如果dependencies里的dependency自己没有声明version元素，那么maven就
         会倒dependencyManagement里面去找有没有对该artifactId和groupId进行过版本声明，如果有，就继承它，如果
         没有就会报错，告诉你必须为dependency声明一个version
       2：如果dependencies中的dependency声明了version，那么无论dependencyManagement中有无对该jar的version声明，
         都以dependency里的version为准-->
  <dependencyManagement>




    <dependencies>
      <!--spring cloud alibaba 2.1.0.RELEASE-->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>2.1.0.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
      </dependency>
      <!--spring boot 2.2.2-->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.2.2.RELEASE</version>
        <!--type的内容就是告诉maven用什么插件来处理这个依赖-->
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--spring cloud Hoxton.SR1-->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Hoxton.SR1</version>
        <type>pom</type>
        <!--scope 在什么阶段使用该jar 下面为导包时-->
        <scope>import</scope>
      </dependency>

      <!--spring cloud 阿里巴巴-->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>2.1.0.RELEASE</version>
        <type>pom</type>
      </dependency>
      <!--mysql-->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
        <scope>runtime</scope>
      </dependency>
      <!-- druid-->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>

      <!--mybatis-->
      <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>${mybatis.spring.boot.version}</version>
      </dependency>
      <!--junit-->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <!--log4j-->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
    </dependencies>

  </dependencyManagement>

  <!--热部署-->
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <addResources>true</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
